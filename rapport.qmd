---
subtitle: "Rapport Statistique"
---

```{r}
#| label: lib

rm(list = ls())
expx <- FALSE
classeur <- "propice1.xls"
#
library(baseph)
library(janitor)
library(tidyverse)
library(gtsummary)
library(kableExtra)
library(lubridate)
library(kableExtra)
library(forestmodel)
library(labelled)
library(epiDisplay)
library(visdat)
library(sf)
library(mapsf)
#
theme_gtsummary_language(language = "fr", decimal.mark = ",")
options(OutDec = ",")
```

# Contrôle de l'échantillon

```{r}
#| label: import

rm(ttpat)
ttpat <- read_delim("datas/PROPICE_test.csv", delim = ";", show_col_types = FALSE, na = c("Non Applicable",""," ","NA")) |> 
 mutate_if(is.character, as.factor) |>
 janitor::clean_names()
bn <- read_delim("datas/bnom.csv", delim = ";", show_col_types = FALSE)
var_label(ttpat ) <- bn$titre
ttpat <- ttpat |> 
 dplyr::select(!(2:4)) |> 
 dplyr::select(!(ends_with("txt"))) |> 
 mutate(profsantnbr = as.factor(profsantnbr)) |> 
 mutate(departt = as.factor(departt))

var_label(ttpat$profsantnbr) <- "Nombre de professionnel consulté avant pour ce motif"
var_label(ttpat$departt) <- "Département du domicile"

## Recodage de tt$devenir
npat <- nrow(ttpat)

## Recodage de ttpat$age en ttpat$age_rec
ttpat <- ttpat |> 
mutate(age2 = age)
ttpat$age <- cut(ttpat$age,
 include.lowest = TRUE,
 right = FALSE,
 dig.lab = 4,
 breaks = c(0, 20, 30, 40, 50, 60, 70, 80, 90, 100, 120), 
 labels = c("< 20", "20-29","30-39","40-49","50-59","60-69","70-79","80-89","90-99","100 et +")
)
```

```{r}
#| label: motifs

mm <- bn[16:23,]

zzm <- ttpat |>
 dplyr::select(patid, starts_with("motif")) |>
 pivot_longer(2:9) |>
 mutate_all(as_factor)
levels(zzm$name) <- mm$titre


```

```{r}
#| label: diags

mmd <- bn[42:50,]

zzd <- ttpat |>
 dplyr::select(patid, starts_with("diag")) |> 
 pivot_longer(2:10) |> 
 mutate_all(as_factor)
levels(zzd$name) <- mmd$titre
```

## Données manquantes

```{r}
#| label: fig-manq-apt
#| fig-cap: Données manquantes (questionnaire patient)

vis_dat(ttpat, palette = "qual")
```


# Description de la population

L'échantillon comporte `r nrow(ttpat)` cas pour `r ncol(ttpat)` variables.

## Profil du patient

### Démographie


```{r}
#| label: tbl-desc1
#| tbl-cap: Caractéristiques démographiques

ttpat |>
 dplyr::select(2:5) |>
 tbl_summary(missing = "no") |>
 modify_header(label ~ " ") |>
 add_n() |>
 bold_labels() |>
 pexptabph(
 lg = FALSE,
 exp = expx,
 nomfich = classeur,
 nomsheet = "desc1"
 )
```

```{r}
#| label: fig-pyr
#| fig-cap: Pyramide des âges
pyramid(ttpat$age2,ttpat$sex, col.gender = c("pink", "lightblue"), binwidth = 10, main = "Pyramide des âges")
``` 

### Antécédents

```{r}
#| label: tbl-atcd
#| tbl-cap: Antécédents du patient

ttpat |>
 dplyr::select(starts_with("atcd")) |>
 tbl_summary(missing = "no", value = list(c(atcd_parturon,atcd_kon,atcd_ison) ~ "Oui")

) |>
 modify_header(label ~ " ") |>
 add_n() |>
 bold_labels() |>
 pexptabph(
 lg = FALSE,
 exp = expx,
 nomfich = classeur,
 nomsheet = "atcd"
 )
```

### Motif de la consultation

```{r}
#| label: tbl-motif
#| tbl-cap: Motif de la consultation
ttpat |>
 dplyr::select(starts_with("motif")) |>
 tbl_summary(missing = "no", value = list(c(motif_kcuton,motif_exanthon, motif_dermaton,motif_infecton, motif_trbmion, motif_maion, motif_divon, motif_noon) ~ "Oui")

) |>
 modify_header(label ~ " ") |>
 add_n() |>
 bold_labels() |>
 pexptabph(
 lg = FALSE,
 exp = expx,
 nomfich = classeur,
 nomsheet = "atcd"
 )
```

```{r}
#| label: fig-motif
#| fig-cap: Motifs d'envoi


cg <- 'darkslategrey'
zzm |>
 dplyr::filter(value == "Oui") |>
 count(name, .drop = FALSE) |> 
 ggplot() +
 aes(x = fct_reorder(name, n), y = n) +
 scale_y_continuous(breaks = 0:2) +
 geom_segment(
 aes(
 x = fct_reorder(name, n),
 xend = fct_reorder(name, n),
 y = 0,
 yend = n
 ),
 size = 1.5,
 color = cg
 ) +
 geom_point(
 size = 5,
 shape = 21,
 color = cg,
 fill = "aquamarine3"
 ) +
 coord_flip() +
 labs(
 title = "Motif d'envoi",
 subtitle = "",
 x = "",
 y = "n",
 caption = "Motif d'envoi"
 ) +
 theme_light() +
 colorspace::scale_fill_discrete_qualitative(palette = "Dark 3") +
 theme(
 plot.title = element_text(size = 16, face = "bold"),
 plot.subtitle = element_text(size = 12),
 axis.title.x = element_text(size = 12),
 legend.title = element_text(size = 12),
 axis.title.y = element_text(
 size = 12,
 angle = 0,
 vjust = .5
 ),
 axis.text.x = element_text(size = 12),
 axis.text.y = element_text(size = 12),
 legend.position = "none"
 )
```


### Clinique

```{r}
#| label: tbl-clinique
#| tbl-cap: Tableau clinique

ttpat |>
 dplyr::select(20:26) |> 
 tbl_summary(missing = "no",
 value = list(c(aggravon, pruriton, douleuron, handicapon, anxion, amon) ~ "Oui") )|>
 modify_header(label ~ " ") |>
 add_n() |>
 bold_labels() |>
 pexptabph(
 lg = FALSE,
 exp = expx,
 nomfich = classeur,
 nomsheet = "clinique"
 )
```

### Diagnostic final

```{r}
#| label: tbl-diagfin
#| tbl-cap: Diagnostic final

ttpat |>
 dplyr::select(starts_with("diag")) |>
 tbl_summary(missing = "no",
 value = list(
 c(
 diag_kcuton, 
 diag_exanthon,
 diag_dermaton, 
 diag_infecton, 
 diag_trbmion, 
 diag_maion, 
 diag_divon, 
 diag_noon, 
 diag_tumeuron
 ) ~ "Oui"
 )) |>
 modify_header(label ~ " ") |>
 add_n() |>
 bold_labels() |>
 pexptabph(
 lg = FALSE,
 exp = expx,
 nomfich = classeur,
 nomsheet = "clinique"
 )
```

```{r}
#| label: fig-daig
#| fig-cap: Diagnostic final
#| 
cg <- 'darkslategrey'
zzd |>
 dplyr::filter(value == "Oui") |>
 count(name, .drop = FALSE) |>
 ggplot() +
 aes(x = fct_reorder(name, n), y = n) +
 scale_y_continuous(breaks = 0:2) +
 geom_segment(
 aes(
 x = fct_reorder(name, n),
 xend = fct_reorder(name, n),
 y = 0,
 yend = n
 ),
 size = 1.5,
 color = cg
 ) +
 geom_point(
 size = 5,
 shape = 21,
 color = cg,
 fill = "aquamarine3"
 ) +
 coord_flip() +
 labs(
 title = "Diagnostic final",
 subtitle = "",
 x = "",
 y = "n",
 caption = "Diagnostic final"
 ) +
 theme_light() +
 colorspace::scale_fill_discrete_qualitative(palette = "Dark 3") +
 theme(
 plot.title = element_text(size = 16, face = "bold"),
 plot.subtitle = element_text(size = 12),
 axis.title.x = element_text(size = 12),
 legend.title = element_text(size = 12),
 axis.title.y = element_text(
 size = 12,
 angle = 0,
 vjust = .5
 ),
 axis.text.x = element_text(size = 12),
 axis.text.y = element_text(size = 12),
 legend.position = "none"
 )
```


## Parcours du patient

### Adressage

```{r}
#| label: tbl-adress
#| tbl-cap: Adressage du patient

ttpat |>
 dplyr::select(6:7) |>
 tbl_summary(missing = "no", 
 value = list(adresproon ~ "Oui") ) |>
 modify_header(label ~ " ") |>
 add_n() |>
 bold_labels() |>
 pexptabph(
 lg = FALSE,
 exp = expx,
 nomfich = classeur,
 nomsheet = "adress"
 )
```

### Professionnels consultés avant

```{r}
#| label: tbl-profav
#| tbl-cap: Professionnels consultés avant

ttpat |>
 dplyr::select(28:34) |>
 tbl_summary(missing = "no", 
 value = list(c(medtraiton, 
urghospiton, urgautron, dermatolon, autrspeon, 
paramedon, profautron) ~ "Oui") ) |>
 modify_header(label ~ " ") |>
 add_n() |>
 bold_labels() |>
 pexptabph(
 lg = FALSE,
 exp = expx,
 nomfich = classeur,
 nomsheet = "adress"
 )
```

```{r}
#| label: fig-nbprof
#| fig-cap: Nombre de professionnel consultés avant pour ce motif

ttpat |> 
 drop_na(profsantnbr) |> 
 count(profsantnbr) |> 
 ggplot() +
 aes(x = profsantnbr, y = n) +
 scale_y_continuous(breaks = 0:4) +
 geom_segment(
 aes(
 x = profsantnbr,
 xend = profsantnbr,
 y = 0,
 yend = n
 ),
 size = 1.5,
 color = cg
 ) +
 geom_point(
 size = 5,
 shape = 21,
 color = cg,
 fill = "aquamarine3"
 ) +
 coord_flip() +
 labs(
 title = "Nombre de professionnel consultés avant \npour ce motif",
 subtitle = "",
 x = "",
 y = "n",
 caption = "Nombre de professionnel consultés avant pour ce motif"
 ) +
 theme_light() +
 colorspace::scale_fill_discrete_qualitative(palette = "Dark 3") +
 theme(
 plot.title = element_text(size = 16, face = "bold"),
 plot.subtitle = element_text(size = 12),
 axis.title.x = element_text(size = 12),
 legend.title = element_text(size = 12),
 axis.title.y = element_text(
 size = 12,
 angle = 0,
 vjust = .5
 ),
 axis.text.x = element_text(size = 12),
 axis.text.y = element_text(size = 12),
 legend.position = "none"
 )
```

Certains patients ont consultés plusieurs professionnels avant ce qui explique le total supérieur à 100%.


### Devenir

```{r}
#| label: tbl-devenir
#| tbl-cap: Devenir du patient 

ttpat |>
 dplyr::select(44) |> 
 tbl_summary(missing = "no", sort = list(everything()~ "frequency")) |>
 modify_header(label ~ " ") |>
 add_n() |>
 bold_labels() |>
 pexptabph(
 lg = FALSE,
 exp = expx,
 nomfich = classeur,
 nomsheet = "devenir"
 )
```

# Critères secondaires

## Rayonnement territorial
*Analyser le rayonnement territorial de la consultation (patient)*

## Médecins généralistes adresseurs
*Déterminer la proportion de médecins généralistes adresseurs et leur localisation (généraliste)*

## Concordance diagnostique
*Analyser la concordance entre le diagnostic d’adressage et le diagnostic posé à l’issue de la consultation (patient)*



```{r}
#| label: tab-concor1
#| tbl-cap: Motif d'envoi et diagnostic final

zmmx <- zzm |> 
 dplyr::filter(value == "Oui") |> 
  dplyr::filter(name != "Divers")

zzdx <- zzd |> 
 dplyr::filter(value == "Oui") |> 
dplyr::filter(name != "Divers" ) |> 
  mutate(name = factor(name))

zzt <- left_join(zmm,zzdx,"patid") |> 
 dplyr::select(starts_with("name"))
var_label(zzt) <- c("Motif d'envoi", "Diagnostic final")

zzt |> 
 tbl_cross(name.x,name.y) |> 
 bold_labels() |> 
 gexptabph(
 lg = FALSE,
 exp = expx,
 nomfich = classeur,
 nomsheet = "concord1"
 )
 
```

```{r}
#| label: tab-concord2
#| tbl-cap: "Motif d'envoi et diagnostic final : concordance"
tbconc <- NULL
ztb <- table(zzt$name.x,zzt$name.y)
for (i in (1:6)){
 nn <- levels(zzt$name.x)[[i]]
 tot <- colSums(ztb)[i] 
 bon <- ztb[i,i]
 bonp <- round(100*bon/tot,1)
 lbon <- paste0(bon, "(",bonp," %)")
 mauv <- tot - bon
 mauvp <- round(100*mauv/tot,1)
 lmauv <- paste0(mauv, "(",mauvp," %)")
 ll <- c(nn,lbon,lmauv)
 tbconc <- rbind(tbconc,ll)
}
tbc <- as_tibble(tbconc)
names(tbc) <- c("Diagnostic Final", "Concordance correcte", "Pas de concordance")
kbl(tbc, booktabs = TRUE) |>
 kable_styling(latex_options = c("HOLD_position"))
 
```

```{r}
#| label: fig-conc1
#| fig-cap: "Motif d'envoi et diagnostic final : concordance"

heatmap(
 ztb,
 Rowv = NA,
 Colv = NA,
 margins = c(16, 16),
 main = " Motif d’envoi et diagnostic final : concordance",
 ylab = "Diagnostic final",
 xlab = "Motif d'envoi"
)
```



## Réalité de l’urgence
*Analyser la réalité de l’urgence ayant motivé la consultation (patient)*

## facteurs associés
*Identifier des facteurs associés à la gravité des patients (patient)* 

## Besoins des médecins généralistes
*Identifier les besoins des médecins généralistes adresseurs (généraliste)* 

## Technique

Les données démographiques on été décrites par la médiane & les quartiles pour les données numériques, en pourcentage pour les données catégorielles. Les intervalles de confiance ont été calculés par bootstrap.
Pour le critère principal la comparaison des deux groupes a été réalisée par un test de Wilcoxon sur séries appariées. La recherche de facteurs prédictifs a été réalisée par des test ANOVA. Vu le grand nombre de tests la limite de significabilité a été définie à 0,01.

L'analyse statistique a été réalisée grâce au logiciel **R**[@rstat] & à divers packages en particulier `tidyverse`[@tidy], `FactoMineR`[@facto] & `epiDisplay`[@epid].
